@page "/blog"
@using Client.Components.Public.Cards
@using Client.Services

<Client.Components.Public.Navbar />

<main class="container min-vh-90 py-5">
    <div class="row">
        <div class="col">
            <h1 class="my-3">Testing getting database data</h1>
            <div class="row">
                @if (InMemoryDBC.BlogPost != null)
                {
                    for (int i = 0; i < InMemoryDBC.BlogPost.Count; i++)
                    {
                        <div class="col-md-4">
                            <BlogPostContainer BP="InMemoryDBC.BlogPost[i]"/>
                        </div>
                    }
                }
            </div>
        </div>
    </div>
</main>

<Client.Components.Public.Footer />

@implements IDisposable
@code {
    [Inject] InMemoryDBC InMemoryDBC { get; set; }

    protected override async Task OnInitializedAsync()
    {
        InMemoryDBC.OnDataChanged += StateHasChanged;

        if (InMemoryDBC.BlogPost == null)
        {
            await InMemoryDBC.GetBlogFromDatabase();
        }
    }

    // Unsubscribe from event or memory leak.
    public void Dispose() => InMemoryDBC.OnDataChanged -= StateHasChanged;
}